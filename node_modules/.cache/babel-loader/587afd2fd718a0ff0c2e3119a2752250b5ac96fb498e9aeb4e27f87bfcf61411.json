{"ast":null,"code":"var _jsxFileName = \"E:\\\\todolist\\\\src\\\\AddTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoData from './ToDoData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddTask() {\n  _s();\n  const [text, setText] = useState('');\n\n  // const handleOnSubmit = (e)=>{\n  //   e.prevent.default();\n  //   if ({text} = \"\")\n  //   alert (\"Please enter a title\")\n  //   else { \n\n  //   }\n  // }\n  function handleOnClick() {\n    console.log(\"hey\");\n  }\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"return(\", /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOnClick(),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Incompleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), \");\"]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_s(AddTask, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useState","ToDoData","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTask","_s","text","setText","handleOnClick","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/todolist/src/AddTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ToDoData from './ToDoData';\r\n\r\n\r\n\r\nexport default function AddTask (){\r\n\r\n  const [text, setText] = useState('');\r\n  \r\n  // const handleOnSubmit = (e)=>{\r\n  //   e.prevent.default();\r\n  //   if ({text} = \"\")\r\n  //   alert (\"Please enter a title\")\r\n  //   else { \r\n      \r\n  //   }\r\n  // }\r\n   function handleOnClick() {\r\n  console.log(\"hey\");\r\n  }\r\n   (\r\n    <>\r\n    return(\r\n\r\n    <div onClick={handleOnClick()}>\r\n\r\n  <p>Title</p>\r\n  <input type= \"text\" id = \"title\" value = {text} onChange = {(e)=>setText(e.target.value)}  />\r\n  <p>Status</p>\r\n  <select>\r\n   <option>completed</option>\r\n   <option>Incompleted</option>\r\n   </select>\r\n   \r\n    </div>\r\n    );\r\n   </>\r\n   )\r\n  \r\n\r\n  \r\n  return (\r\n    <>\r\n     <button onClick = {handleOnClick}>\r\n     Add task\r\n     {/* <p>Title</p>\r\n     <input type= \"text\" id = \"title\" value = {text} onChange = {(e)=>setText(e.target.value)}  />\r\n     <p>Status</p>\r\n     <select>\r\n     <option>completed</option>\r\n      <option>Incompleted</option>\r\n      </select> */}\r\n      {/* <button onClick = {handleOnSubmit}>AddTask</button>  */}\r\n      </button>\r\n      </>\r\n  )\r\n    }    \r\n\r\n  \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIlC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACC,SAASU,aAAaA,CAAA,EAAG;IAC1BC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB;EACC,aACCT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GAAE,SAGF,eAAAV,OAAA;MAAKW,OAAO,EAAEJ,aAAa,CAAC,CAAE;MAAAG,QAAA,gBAEhCV,OAAA;QAAAU,QAAA,EAAG;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACZf,OAAA;QAAOgB,IAAI,EAAE,MAAM;QAACC,EAAE,EAAG,OAAO;QAACC,KAAK,EAAIb,IAAK;QAACc,QAAQ,EAAKC,CAAC,IAAGd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7Ff,OAAA;QAAAU,QAAA,EAAG;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACbf,OAAA;QAAAU,QAAA,gBACCV,OAAA;UAAAU,QAAA,EAAQ;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1Bf,OAAA;UAAAU,QAAA,EAAQ;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,MAEP;EAAA,eAAE,CAAC;EAKJ,oBACEf,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACCV,OAAA;MAAQW,OAAO,EAAIJ,aAAc;MAAAG,QAAA,EAAC;IAElC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQS;EAAC,gBACP,CAAC;AAEL;AAACX,EAAA,CAnDmBD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}