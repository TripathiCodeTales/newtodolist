{"ast":null,"code":"var _jsxFileName = \"E:\\\\todolist\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./style.css\";\nimport Status from \"./Status\";\nimport Lists from \"./Lists\";\nimport AddTask from \"./AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialList = [{\n  title: 'react module',\n  status: 'complete'\n}, {\n  title: 'components in react',\n  status: 'incomplete'\n}];\nconst App = () => {\n  _s();\n  const [listitems, setListitems] = useState(initialList);\n  const [filter, setFilter] = useState(null);\n  // const [isChecked,setIsChecked] = useState(false);\n\n  const deleteTask = task => {\n    const title = task.title;\n    const deletedTask = listitems.filter(item => item.title !== title);\n    setListitems(deletedTask);\n  };\n  const handleFilter = event => {\n    const selectedFilter = event.target.value;\n    setFilter(selectedFilter);\n  };\n  const handleAddTask = text => {\n    setListitems([...listitems, {\n      title: text,\n      status: 'incomplete'\n    }]);\n  };\n\n  // const handleOnChange = (item) => {\n  //   if (item.target.Checked === true) {\n  //       //  setIsChecked(true);\n  //       //  console.log(setIsChecked);\n\n  //     // const checkedItem = (item.status === 'complete')\n  //     setFilter('complete');\n  //   } else {\n  //       // const unCheckedItem = (item.status === 'incomplete')\n  //       // setIsChecked(false);\n  //       setFilter('incomplete');\n  //   }\n  // }\n\n  // for status update\n  const handleOnChange = item => {\n    const filteredItem = listitems.filter(item => {\n      return item.status === 'complete';\n    });\n    setListitems(filteredItem);\n  };\n  let filteredlist = [...listitems];\n  if (filter && filter !== \"All\") {\n    filteredlist = listitems.filter(item => {\n      return item.status === filter;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDOLIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lists, {\n      listitems: filteredlist,\n      deleteTask: deleteTask,\n      handleOnChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      handleFilter: handleFilter,\n      handleOnChange: handleOnChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bmq68w3Vqjs4hFqQFO39CvrpcQw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Status","Lists","AddTask","jsxDEV","_jsxDEV","initialList","title","status","App","_s","listitems","setListitems","filter","setFilter","deleteTask","task","deletedTask","item","handleFilter","event","selectedFilter","target","value","handleAddTask","text","handleOnChange","filteredItem","filteredlist","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","_c","$RefreshReg$"],"sources":["E:/todolist/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./style.css\";\nimport Status from \"./Status\";\nimport Lists from \"./Lists\";\nimport AddTask from \"./AddTask\";\n\nconst initialList = [\n  {\n    title: 'react module',\n    status: 'complete',\n  },\n  {\n    title: 'components in react',\n    status: 'incomplete',\n  }\n]\n\nconst App = () => {\n  const [listitems, setListitems] = useState(initialList);\n  const [filter, setFilter] = useState(null);\n  // const [isChecked,setIsChecked] = useState(false);\n\n  const deleteTask = (task) => {\n    const title = task.title\n    const deletedTask = listitems.filter((item) => item.title !== title);\n    setListitems(deletedTask);\n  }\n\n  const handleFilter = (event) => {\n    const selectedFilter = event.target.value;\n    setFilter(selectedFilter);\n  }\n\n  const handleAddTask = (text) => {\n    setListitems([\n      ...listitems,\n      {\n        title: text,\n        status: 'incomplete',\n      }\n    ])\n  }\n  \n// const handleOnChange = (item) => {\n//   if (item.target.Checked === true) {\n//       //  setIsChecked(true);\n//       //  console.log(setIsChecked);\n\n//     // const checkedItem = (item.status === 'complete')\n//     setFilter('complete');\n//   } else {\n//       // const unCheckedItem = (item.status === 'incomplete')\n//       // setIsChecked(false);\n//       setFilter('incomplete');\n//   }\n// }\n\n // for status update\nconst handleOnChange = (item) => {\n  \n  const filteredItem = listitems.filter((item) =>{\n   return  item.status === 'complete';\n  }) \n  setListitems(filteredItem);\n} \n let filteredlist = [...listitems]\n  if (filter && filter !== \"All\") {\n    filteredlist = listitems.filter((item) => {\n      return item.status === filter;\n    })\n  }\n  \n\n  return (\n    <div>\n      <h1>ToDOLIST</h1>\n      <AddTask onAddTask={handleAddTask} />\n      <Lists listitems={filteredlist}\n        deleteTask={deleteTask}  handleOnChange = {handleOnChange}  />\n      <Status handleFilter={handleFilter} \n      handleOnChange = {handleOnChange} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}